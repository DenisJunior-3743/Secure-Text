name: 🔁 Auto Build & Release SecureText

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  version:
    name: 🔢 Bump Version Tag
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.bump.outputs.new_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # important so we can read all tags

      - name: Get Latest Tag
        id: get_tag
        run: |
          TAG=$(git tag --sort=-v:refname | head -n 1)
          if [ -z "$TAG" ]; then
            echo "latest_tag=" >> $GITHUB_OUTPUT
          else
            echo "latest_tag=$TAG" >> $GITHUB_OUTPUT
          fi

      - name: Bump Version Automatically
        id: bump
        run: |
          latest_tag="${{ steps.get_tag.outputs.latest_tag }}"
          if [ -z "$latest_tag" ]; then
            new_tag=v1
          else
            num=$(echo "$latest_tag" | grep -oE '[0-9]+$')
            new_tag="v$((num+1))"
          fi
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT
          echo "Next version: $new_tag"

      - name: Push New Tag to GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ steps.bump.outputs.new_tag }}
          git push origin ${{ steps.bump.outputs.new_tag }}

  build:
    name: 🏗️ Build Windows Executables
    needs: version
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [x64, x86]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          architecture: ${{ matrix.arch }}

      - name: Install Build & Runtime Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          if (Test-Path requirements.txt) { pip install -r requirements.txt }
          pip install pycryptodome pillow

      - name: Build SecureText Executable
        run: |
          $HIDDEN = '--hidden-import=Crypto.Cipher --hidden-import=Crypto.Random --hidden-import=Crypto.Util --hidden-import=PIL.Image --hidden-import=PIL.ImageTk'
          if (Test-Path 'app.ico') {
            pyinstaller --onefile --noconsole main.py --icon=app.ico $HIDDEN
          } else {
            pyinstaller --onefile --noconsole main.py $HIDDEN
          }
          mkdir dist_upload
          copy dist\\main.exe dist_upload\\SecureText-${{ matrix.arch }}.exe

      - name: Add README for ZIP
        run: |
          echo "SecureTextApp" > dist_upload\\README.txt
          echo "Version: ${{ needs.version.outputs.tag }}" >> dist_upload\\README.txt
          echo "Architecture: ${{ matrix.arch }}" >> dist_upload\\README.txt
          echo "Built automatically via GitHub Actions" >> dist_upload\\README.txt
          echo "" >> dist_upload\\README.txt
          echo "Thank you for using SecureText 💾" >> dist_upload\\README.txt

      - name: Zip Release Files
        run: powershell Compress-Archive -Path dist_upload\\* -DestinationPath SecureText-${{ matrix.arch }}.zip

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: SecureText-${{ matrix.arch }}
          path: |
            dist_upload/SecureText-${{ matrix.arch }}.exe
            SecureText-${{ matrix.arch }}.zip

  release:
    name: 🚀 Publish GitHub Release
    needs: [version, build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
          pattern: SecureText-*  # download both x64 and x86

      - name: Debug Artifact Listing
        run: ls -R ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.version.outputs.tag }}
          name: "SecureText ${{ needs.version.outputs.tag }}"
          draft: false
          prerelease: false
          body: |
            🚀 **SecureText Auto-Build Release**

            Includes ready-to-use executables and zipped portable versions for both 64-bit and 32-bit Windows.

            🔽 Downloads:
            - SecureText-x64.exe  
            - SecureText-x86.exe  
            - SecureText-x64.zip  
            - SecureText-x86.zip

            _Built automatically via GitHub Actions._
          files: ./artifacts/**/*  # match all built artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
